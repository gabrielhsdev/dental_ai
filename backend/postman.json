{
	"info": {
		"_postman_id": "6c552741-b4b4-48ef-a938-f4e1e20ccfdd",
		"name": "Dental AI",
		"description": "See complete documentation for routes settings",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30959634"
	},
	"item": [
		{
			"name": "Auth Microservice",
			"item": [
				{
					"name": "Register",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"test\",\n  \"email\": \"test@example.com\",\n  \"password\": \"test\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Creates new user, currently passwords are not hashed but that can be changed later on."
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Creates new user, currently passwords are not hashed but that can be changed later on."
					},
					"response": []
				},
				{
					"name": "Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxYmY4ZjQ4MS00MmIyLTQ5M2QtOTlhZS1mZWEwOTFhMzdhN2UiLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQ3MTc3MDA2LCJpYXQiOjE3NDcwMDQyMDZ9.xSAWyEwwF79UjgN4CRjluth5yVmZd6FMWkJZ_8F_csQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost/auth/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"me"
							]
						},
						"description": "Returns who is the owner of the token"
					},
					"response": []
				},
				{
					"name": "Validate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhNWQzNmYzYi03NjFjLTQxZmQtYmNiMy0xNDdhNDI2YmIwZjMiLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQ1OTYwNDA4LCJpYXQiOjE3NDU3ODc2MDh9.znffOegP_FQUlcblEaa2eQ9D02wMkuUcovW3q69L26A",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost/auth/validate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"validate"
							]
						},
						"description": "Mostly used on our middleware, checks if the token is valid, the nginx.conf file has usage for this route"
					},
					"response": []
				}
			],
			"description": "Custom auth microservice, these endpoins will login & register users, validade & generate JWT. Nginx will use this as the middleware to approve protected requests too, or deny them."
		},
		{
			"name": "Database Service",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "Get User By Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjOTkxMzgwYy1lMjAwLTQxMDItYWMxZC1jMTRjN2FjNDBlOGEiLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQ3MTc0ODM3LCJpYXQiOjE3NDcwMDIwMzd9.MFGx25H6oyCx2Dciqbrw4q6vbOBFFu8BiENt5zCeTxI",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost/db/users/e3cac880-c73c-4410-8549-4ebf7d9df0b7",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"db",
										"users",
										"e3cac880-c73c-4410-8549-4ebf7d9df0b7"
									]
								},
								"description": "Get user by passing its UUID on the url"
							},
							"response": []
						},
						{
							"name": "Get User By Email",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjOTkxMzgwYy1lMjAwLTQxMDItYWMxZC1jMTRjN2FjNDBlOGEiLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQ3MTc0ODM3LCJpYXQiOjE3NDcwMDIwMzd9.MFGx25H6oyCx2Dciqbrw4q6vbOBFFu8BiENt5zCeTxI",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost/db/users/email?email=admin@example.com",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"db",
										"users",
										"email"
									],
									"query": [
										{
											"key": "email",
											"value": "admin@example.com"
										}
									]
								},
								"description": "Get user by passing its email on the parameter"
							},
							"response": []
						}
					],
					"description": "CRUD for our users table ( Dentists )"
				},
				{
					"name": "Patients",
					"item": [
						{
							"name": "Create Patient",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxYmY4ZjQ4MS00MmIyLTQ5M2QtOTlhZS1mZWEwOTFhMzdhN2UiLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQ3MTc3MDA2LCJpYXQiOjE3NDcwMDQyMDZ9.xSAWyEwwF79UjgN4CRjluth5yVmZd6FMWkJZ_8F_csQ",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Doe\",\n  \"dateOfBirth\": \"1990-06-15T00:00:00Z\",\n  \"gender\": \"Female\",\n  \"phoneNumber\": \"+1-555-1234\",\n  \"email\": \"jane.doe@example.com\",\n  \"notes\": \"Allergic to penicillin\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost/db/patients/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"db",
										"patients",
										""
									]
								},
								"description": "Get user by passing its UUID on the url"
							},
							"response": []
						},
						{
							"name": "Get Patients By User Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjOTkxMzgwYy1lMjAwLTQxMDItYWMxZC1jMTRjN2FjNDBlOGEiLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQ3MTc0ODM3LCJpYXQiOjE3NDcwMDIwMzd9.MFGx25H6oyCx2Dciqbrw4q6vbOBFFu8BiENt5zCeTxI",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost/db/patients/user/c991380c-e200-4102-ac1d-c14c7ac40e8a",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"db",
										"patients",
										"user",
										"c991380c-e200-4102-ac1d-c14c7ac40e8a"
									]
								},
								"description": "Get user by passing its UUID on the url"
							},
							"response": []
						},
						{
							"name": "Get Patients By Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjOTkxMzgwYy1lMjAwLTQxMDItYWMxZC1jMTRjN2FjNDBlOGEiLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQ3MTc0ODM3LCJpYXQiOjE3NDcwMDIwMzd9.MFGx25H6oyCx2Dciqbrw4q6vbOBFFu8BiENt5zCeTxI",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost/db/patients/00000000-0000-0000-0000-000000000000",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"db",
										"patients",
										"00000000-0000-0000-0000-000000000000"
									]
								},
								"description": "Get user by passing its UUID on the url"
							},
							"response": []
						}
					],
					"description": "CRUD for our patients"
				}
			],
			"description": "Used for CRUD operations not related to the AUTH"
		},
		{
			"name": "Diagnostics Service",
			"item": [],
			"description": "No routes are set for now, this is the python inference service"
		}
	]
}