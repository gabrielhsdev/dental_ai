{
	"info": {
		"_postman_id": "6c552741-b4b4-48ef-a938-f4e1e20ccfdd",
		"name": "Dental AI",
		"description": "Project for the university",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30959634"
	},
	"item": [
		{
			"name": "Auth Microservice",
			"item": [
				{
					"name": "Register",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"test\",\n  \"email\": \"test@example.com\",\n  \"password\": \"test\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Creates new user, currently passwords are not hashed but that can be changed later on."
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Creates new user, currently passwords are not hashed but that can be changed later on."
					},
					"response": []
				},
				{
					"name": "Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4ODA5MTcyNC0yM2QwLTRkY2EtYWI0My04ODZhZGQyZjZkNmMiLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQ1OTYzMTEyLCJpYXQiOjE3NDU3OTAzMTJ9.wplSLG5fNkpr_8N86lmxby2qnaVyFxVE5dE_KPJCrpw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost/auth/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"me"
							]
						},
						"description": "Returns who is the owner of the token"
					},
					"response": []
				},
				{
					"name": "Validate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhNWQzNmYzYi03NjFjLTQxZmQtYmNiMy0xNDdhNDI2YmIwZjMiLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQ1OTYwNDA4LCJpYXQiOjE3NDU3ODc2MDh9.znffOegP_FQUlcblEaa2eQ9D02wMkuUcovW3q69L26A",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost/auth/validate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"validate"
							]
						},
						"description": "Mostly used on our middleware, checks if the token is valid, the nginx.conf file has usage for this route"
					},
					"response": []
				}
			],
			"description": "Custom auth microservice, these endpoins will login & register users, validade & generate JWT. Nginx will use this as the middleware to approve protected requests too, or deny them."
		},
		{
			"name": "Database Service",
			"item": [
				{
					"name": "Get User By Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZDcxMjAzMy0yZDg1LTQxMGYtYWNiMi1hOTVkNTk1YzYxOGYiLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQ1OTYzODI5LCJpYXQiOjE3NDU3OTEwMjl9.u3xM_u5o1z5BNA_VpuSqdiznvDt79quWzgjWeGzeNYk",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/db/users/e3cac880-c73c-4410-8549-4ebf7d9df0b7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"db",
								"users",
								"e3cac880-c73c-4410-8549-4ebf7d9df0b7"
							]
						},
						"description": "Get user by passing its UUID on the url"
					},
					"response": []
				},
				{
					"name": "Get User By Email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhNWQzNmYzYi03NjFjLTQxZmQtYmNiMy0xNDdhNDI2YmIwZjMiLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQ1OTYwNDA4LCJpYXQiOjE3NDU3ODc2MDh9.znffOegP_FQUlcblEaa2eQ9D02wMkuUcovW3q69L26A",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/db/users/email?email=admin@example.com",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"db",
								"users",
								"email"
							],
							"query": [
								{
									"key": "email",
									"value": "admin@example.com"
								}
							]
						},
						"description": "Get user by passing its email on the parameter"
					},
					"response": []
				}
			],
			"description": "Used for CRUD like operations, maybe accessing a patients data or submitting a new request"
		},
		{
			"name": "Diagnostics Service",
			"item": []
		}
	]
}