{
	"info": {
		"_postman_id": "6c552741-b4b4-48ef-a938-f4e1e20ccfdd",
		"name": "Dental AI",
		"description": "Project for the university",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30959634"
	},
	"item": [
		{
			"name": "Auth Microservice",
			"item": [
				{
					"name": "Admin",
					"item": [
						{
							"name": "Get User By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost/auth/users/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"auth",
										"users",
										"1"
									]
								},
								"description": "Get specific user by id"
							},
							"response": []
						}
					],
					"description": "Routes for general admin usage, they may never be used on the app but can be\n\nused for maybe debug purposes on the development side"
				},
				{
					"name": "Register",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"john_doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"securepassword123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/auth/core/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"core",
								"register"
							]
						},
						"description": "Creates new user, currently passwords are not hashed but that can be changed later on."
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"securepassword123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/auth/core/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"core",
								"login"
							]
						},
						"description": "Creates new user, currently passwords are not hashed but that can be changed later on."
					},
					"response": []
				},
				{
					"name": "Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDE3MTA4OTUsImlhdCI6MTc0MTUzODA5NSwic3ViIjoyLCJ1c2VybmFtZSI6ImpvaG5fZG9lIn0.t3g77E2rsLxjFsBjbEVyWx8T-f3DI5dG1NvvppTB5hI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost/auth/core/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"core",
								"me"
							]
						},
						"description": "Creates new user, currently passwords are not hashed but that can be changed later on."
					},
					"response": []
				},
				{
					"name": "Validate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDE3MTA4OTUsImlhdCI6MTc0MTUzODA5NSwic3ViIjoyLCJ1c2VybmFtZSI6ImpvaG5fZG9lIn0.t3g77E2rsLxjFsBjbEVyWx8T-f3DI5dG1NvvppTB5hI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost/auth/core/validate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"auth",
								"core",
								"validate"
							]
						},
						"description": "Creates new user, currently passwords are not hashed but that can be changed later on."
					},
					"response": []
				}
			],
			"description": "Custom auth microservice, these endpoins will login & register users, validade & generate JWT. Nginx will use this as the middleware to approve protected requests too, or deny them."
		},
		{
			"name": "Database Service ( Currently Testing )",
			"item": [
				{
					"name": "Health",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDE3MTA4OTUsImlhdCI6MTc0MTUzODA5NSwic3ViIjoyLCJ1c2VybmFtZSI6ImpvaG5fZG9lIn0.t3g77E2rsLxjFsBjbEVyWx8T-f3DI5dG1NvvppTB5hI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"db"
							]
						}
					},
					"response": []
				}
			],
			"description": "Used for default CRUD like operations"
		}
	]
}