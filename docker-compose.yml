version: '3.8'

services:
  auth-service:
    build: ./backend/auth-service
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    env_file:
      - .env
    depends_on:
      - db-service

  db-service:
    build: ./backend/db-service
    ports:
      - "${DB_SERVICE_PORT}:${DB_SERVICE_PORT}"
    env_file:
      - .env
    depends_on:
      - mysql

  diagnostics-service:
    build: ./backend/diagnostics-service
    ports:
      - "${DIAGNOSTICS_SERVICE_PORT}:${DIAGNOSTICS_SERVICE_PORT}"
    env_file:
      - .env
    depends_on:
      - db-service

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    environment:
      - AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
      - DB_SERVICE_HOST=${DB_SERVICE_HOST}
      - DB_SERVICE_PORT=${DB_SERVICE_PORT}
      - DIAGNOSTICS_SERVICE_HOST=${DIAGNOSTICS_SERVICE_HOST}
      - DIAGNOSTICS_SERVICE_PORT=${DIAGNOSTICS_SERVICE_PORT}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf.template:ro
    entrypoint: /bin/bash -c "envsubst < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - auth-service
      - db-service

  mysql:
    image: mysql:latest
    restart: always
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./migrations:/docker-entrypoint-initdb.d

volumes:
  mysql_data:
