events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout 65;

    upstream auth_service {
        server ${AUTH_SERVICE_HOST}:${AUTH_SERVICE_PORT};
    }

    upstream db_service {
        server ${DB_SERVICE_HOST}:${DB_SERVICE_PORT};
    }

    upstream diagnostics_service {
        server ${DIAGNOSTICS_SERVICE_HOST}:${DIAGNOSTICS_SERVICE_PORT};
    }

    server {
        listen 80;

        location /auth/ {
            proxy_pass http://auth_service/;
        }

        # Use a subrequest for authentication with POST method
        location = /auth_proxy {
            proxy_pass http://auth_service/core/validate;
            proxy_method POST;
            proxy_set_header Content-Length 0;  # Required for POST without body
        }

        location /db/ {
            auth_request /auth_proxy;

            proxy_pass http://db_service/;
        }

        location /diagnostics/ {
            auth_request /auth_proxy;

            proxy_pass http://diagnostics_service/;
        }

        error_page 401 403 = @auth_fail;

        location @auth_fail {
            return 403;
        }

        error_log  /var/log/nginx/error.log debug;
        access_log /var/log/nginx/access.log;
    }

}
